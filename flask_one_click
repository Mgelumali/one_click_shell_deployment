#!/bin/bash

# Exit on error
set -e

# Define Variables
APP_DIR="/home/ubuntu/Flask-Ecommerce"
VENV_DIR="$APP_DIR/venv"
GUNICORN_SOCK="$APP_DIR/gunicorn.sock"
SERVICE_NAME="flask-ecommerce"
NGINX_CONF="/etc/nginx/sites-available/flask_ecommerce"
BACKUP_FILE="/home/ubuntu/flask_ecommerce_backup.tar.gz"

# Update System
echo "Updating system..."
sudo apt update && sudo apt upgrade -y

# Install Dependencies
echo "Installing dependencies..."
sudo apt install -y python3.12 python3.12-venv python3.12-dev python3-pip postgresql nginx supervisor git

# Clone or Pull Repository
if [ ! -d "$APP_DIR" ]; then
    git clone https://github.com/yourusername/Flask-Ecommerce.git "$APP_DIR"
else
    cd "$APP_DIR" && git pull origin main
fi

# Setup Virtual Environment
echo "Setting up virtual environment..."
sudo apt install python3.12-venv -y
python3 -m venv "$VENV_DIR"
source "$VENV_DIR/bin/activate"
pip install --upgrade pip
pip install -r "$APP_DIR/requirements.txt"

# Create Systemd Service
echo "Creating systemd service..."
cat <<EOF | sudo tee /etc/systemd/system/$SERVICE_NAME.service
[Unit]
Description=Gunicorn instance to serve Flask E-commerce
After=network.target

[Service]
User=ubuntu
Group=www-data
WorkingDirectory=$APP_DIR
Environment="PATH=$VENV_DIR/bin"
ExecStart=$VENV_DIR/bin/gunicorn --workers 3 --bind unix:$GUNICORN_SOCK main:app
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

# Reload and Start Service
echo "Starting Flask application..."
sudo systemctl daemon-reload
sudo systemctl start $SERVICE_NAME
sudo systemctl enable $SERVICE_NAME

# Configure Nginx
echo "Configuring Nginx..."
cat <<EOF | sudo tee $NGINX_CONF
server {
    listen 80;
    server_name yourdomain.com;

    location / {
        include proxy_params;
        proxy_pass http://unix:$GUNICORN_SOCK;
    }

    error_log /var/log/nginx/flask_ecommerce_error.log;
    access_log /var/log/nginx/flask_ecommerce_access.log;
}
EOF

# Enable Nginx Config
sudo ln -sf $NGINX_CONF /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl restart nginx

# Set Permissions
echo "Setting permissions..."
sudo chown -R ubuntu:www-data "$APP_DIR"
sudo chmod -R 755 "$APP_DIR"

# Create Backup
echo "Creating backup..."
sudo tar --exclude="$BACKUP_FILE" -czf "$BACKUP_FILE" "$APP_DIR"

# Print Completion Message
echo "Deployment complete. Flask app is running."
echo "Check service status: sudo systemctl status $SERVICE_NAME"
